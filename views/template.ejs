<link rel="stylesheet" href="http://cdn.dhtmlx.com/edge/dhtmlx.css" type="text/css"> 
<script src="http://cdn.dhtmlx.com/edge/dhtmlx.js" type="text/javascript"></script>

<h2><%= foo %></h2>

<div id="gridbox" style="width:900px;height:400px;"></div>  
<br>
<div id="2ndgridbox" style="width:900px;height:400px;"></div>  
<script>
  // Here we demonstrate 2 ways to load data for dhtmlx one with Ejs and the other by fetching from an endpoint
  mygrid = new dhtmlXGridObject('gridbox');

  //the path to images required by grid 
  mygrid.setImagePath("./codebase/imgs/");
  mygrid.setHeader("Sales,Book title,Author,Price");//the headers of columns  
  mygrid.setInitWidths("100,250,150,100");          //the widths of columns  
  mygrid.setColAlign("right,left,left,left");       //the alignment of columns   
  mygrid.setColTypes("ro,ed,ed,ed");                //the types of columns  
  mygrid.setColSorting("int,str,str,int");          //the sorting types   
  mygrid.init();

  const myData = JSON.parse('<%- data %>');
  console.log(myData)
  mygrid.parse({ rows: myData },"json");

  mygrid2 = new dhtmlXGridObject('2ndgridbox');

  //the path to images required by grid 
  mygrid2.setImagePath("./codebase/imgs/");
  mygrid2.setHeader("Sales,Book title,Author,Price");//the headers of columns  
  mygrid2.setInitWidths("100,250,150,100");          //the widths of columns  
  mygrid2.setColAlign("right,left,left,left");       //the alignment of columns   
  mygrid2.setColTypes("ro,ed,ed,ed");                //the types of columns  
  mygrid2.setColSorting("int,str,str,int");          //the sorting types   
  mygrid2.init();

  const loadData = async () => {
    const res = await fetch('/api/data');
    const json = await res.json();

    const data = { rows: json };
    mygrid2.parse(data,"json");
  }

  loadData();
</script>
